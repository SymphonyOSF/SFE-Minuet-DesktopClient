//
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
//
namespace Xilium.CefGlue
{
    using System;
    using System.Collections.Generic;
    using System.Diagnostics;
    using System.Runtime.InteropServices;
    using Xilium.CefGlue.Interop;
    
    // Role: PROXY
    public sealed unsafe partial class CefV8Exception : IDisposable
    {
        internal static CefV8Exception FromNative(cef_v8exception_t* ptr)
        {
            return new CefV8Exception(ptr);
        }
        
        internal static CefV8Exception FromNativeOrNull(cef_v8exception_t* ptr)
        {
            if (ptr == null) return null;
            return new CefV8Exception(ptr);
        }
        
        private cef_v8exception_t* _self;
        
        private CefV8Exception(cef_v8exception_t* ptr)
        {
            if (ptr == null) throw new ArgumentNullException("ptr");
            _self = ptr;
        }
        
        ~CefV8Exception()
        {
            Dispose();
        }
        
        public void Dispose()
        {
            if (_self != null)
            {
                Release();
            }
        }
        
        internal void AddRef()
        {
            cef_v8exception_t.add_ref(_self);
        }
        
        internal bool Release()
        {
            bool retVal = cef_v8exception_t.release(_self);
            if (retVal)
            {
                GC.SuppressFinalize(this);
                _self = null;
            }
            return retVal;
        }
        
        internal bool HasOneRef
        {
            get { return cef_v8exception_t.has_one_ref(_self); }
        }
        
        internal cef_v8exception_t* ToNative()
        {
            AddRef();
            return _self;
        }
    }
}
